.grid {
   align-items: baseline;
   display: grid;
   gap: var(--px-16) var(--px-16);
   grid-template-columns: repeat($grid-cols, 1fr);
   width: 100%;

   + .grid {
      margin: var(--px-16) 0;
   }

   &:last-of-type {
      margin: var(--px-16) 0 0 0;
   }

   &:only-child {
      margin: 0;
   }

   &--center {
      @extend .grid;
      align-items: center;
   }
}

@mixin base-column {
   display: flex;
   flex-direction: column;
   width: 100%;

   @content;
}


@mixin grid-maker {
   @for $count from $grid-cols through 1 {
      &-#{$count} {
         @include base-column {
            grid-column-end: span #{$count};
            grid-column-start: auto;

            @if ($count > 1 and $count < $grid-cols) {
               @for $col-count from $grid-cols through 1 {
                  @include for-variant('at-#{$col-count}') {
                     @include base-column {
                        grid-column-end: span #{$count};
                        grid-column-start: $col-count;
                     }
                  }
               }

            }

         }

         @if ($count % 2 == 0 and $count < $grid-cols) {
            &--centered {
               @include base-column {
                  grid-column-end: span #{$count};
                  grid-column-start: (($grid-cols - $count) / 2) + 1;
               }
            }
         }
      }

   }
}


.col {
   @include with-queries {
      @include grid-maker;
   }
}
